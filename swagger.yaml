openapi: 3.0.3
info:
  title: Team happiness - Buddy program
  description: Api that will measure the happyness of the teams
  version: 1.0.0
servers:
  - url: https://localhost:8080
tags:
  - name: Teams
    description: Everything about the teams in the Hub
  - name: Questions
    description: Questions that are going to make to the teams
  - name: Survey
    description: This will be use to recive user responses
  - name: Option_question
    description: This will be use to retrieve options of questions   
paths:
  /team:
    get:
      tags:
        - Teams
      summary: Get all the teams in the Hub
      description: Get all the teams
      operationId: getTeams
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayTeams' 
  /question/{teamId}:
    get:
      tags:
        - Questions
      summary: Get all the questions
      description: Get all the question
      parameters: 
          - in: path
            name: teamId
            required: true
            schema: 
              type: string 
              format: uuid
      operationId: getQuestions
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayQuestions'
  /survey:
    post:
      tags:
        - Survey
      summary: Insert a surver
      description: Insert a survey data
      operationId: postSurvey
      requestBody:
        description: Survey to insert in the database
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
      responses:
        '201':
          description: Successful operation
  /option:
      get:
        tags:
          - Option_question
        summary: Get all the options for the question
        description: Get all the options of a question
        operationId: getOption
        responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ArrayOptionquestion'
  /answer:
      post:
        tags:
          - answer
        summary: Post the survey's answers
        description: Post all the answers that the team member submitted
        operationId: postAnswer
        responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ArrayAnswer'
  /result:
      get:
        tags:
          - result
        summary: Get the survey's results
        description: Get all the result that the team member submitted
        operationId: getResult
        parameters: 
          - in: query
            name: teamId
            schema: 
              type: string 
              format: uuid
          - in: query
            name: groupedBy
            schema: 
              type: string 
              enum: [ month , kpi] 
          - in: query
            name: groupSelected
            schema: 
              type: string 
              format: string
            examples:
                    month: 
                      value: January 
                    kpi:
                      value: "c252189e-82af-48f3-aa40-188606a1a126"
        responses:
          '200':
            description: Successful operation
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/ArrayResultMonth'
                    - $ref: '#/components/schemas/ArrayResultKpi'
  
components:
  schemas:
    ArrayTeams:
      type: array
      items:
            $ref: '#/components/schemas/Team'
    Team:
      required:
        - teamId
        - teamName
      type: object
      properties:
        teamId:
          type: string
          format: UUID
          example: b2f7a764-14b5-45dd-9222-0a4a746f4f7d
        teamName:
          type: string
          example: SQA
    ArrayQuestions:
      type: array
      items:
            $ref: '#/components/schemas/Question'
    Question:
      required:
        - required
        - questionId
        - questionType
        - question
        - optionDTOList
      type: object
      properties:
        optionId:
            type: string
            format: UUID
            example: 47455c16-41ee-4622-8a75-697aacfa2466
        questionId:
          type: string
          format: UUID
          example: 47455c16-41ee-4622-8a75-697aacfa2466
        questionType:
          type: string
          enum: [traffic_light , comment]
        question:
          type: string
          example: How are you feeling today?   
        optionDTOList:
          type: array
          items:
            $ref: '#/components/schemas/ArrayOptionquestion'  
        required:
          type: boolean
    ArrayOptionquestion:
      required:
        - optionId
        - surveyId
        - questionId
        - valorOption
        - color
      type: object
      properties:
        optionId:
          type: string
          format: UUID
          example: b2f7a764-14b5-45dd-9222-0a4a746f4f7d
        surveyId:
          type: string
          format: UUID
          example: b2f7a764-14b5-45dd-9222-0a4a746f4f7d
        questionId:
          type: string
          format: UUID
          example: b2f7a764-14b5-45dd-9222-0a4a746f4f7d      
        valorOption:
          type: string
          example: neutral
        color:
          type: string
          example: orange
    Survey:
      required:
        - surveyId
        - teamId
      type: object
      properties:
        surveyId:
          type: string
          format: UUID
          example: b2f7a764-14b5-45dd-9222-0a4a746f4f7d
        teamId:
          type: string
          format: UUID
          example: b2f7a764-14b5-45dd-9222-0a4a746f4f7d
    ArrayAnswer:
      type: array
      items:
            $ref: '#/components/schemas/Answer'
    Answer:
      required:
        - answerId
        - surveyId
        - questionId
        - optionId
        - valorAnswer
      type: object
      properties:
        answerId:
          type: string
          format: UUID
          example: 47455c16-41ee-4622-8a75-697aacfa2465
        surveyId:
          type: string
          format: UUID
          example: 47455c16-41ee-4622-8a75-697aacfa2466
        questionId:
          type: string
          format: UUID
          example: 47455c16-41ee-4622-8a75-697aacfa2467
        optionId:
          type: string
          format: UUID
          example: 47455c16-41ee-4622-8a75-697aacfa2468 
        valorAnswer:
          type: string
          example: Me siento contento y feliz 
    ArrayResultMonth:
          type: array
          items:
            $ref: '#/components/schemas/ResultMonth' 
    ArrayResultKpi:
          type: array
          items:
            $ref: '#/components/schemas/ResultKpi' 
    ResultMonth:
        required:
          - questionId
          - question
          - questionType
          - response
        type: object
        properties:
          questionId:
            type: string
            format: UUID
            example: 47455c16-41ee-4622-8a75-697aacfa2465
          questionType:
            type: string
            enum: [traffic_light , comment]
          question: 
            type: string
          response:
            oneOf: 
              - $ref: '#/components/schemas/ResultTrafficlight'
              - $ref: '#/components/schemas/ResultComment'
    ResultTrafficlight:
        required:
          - green
          - orange
          - red
        type: object
        properties:
          green: 
            type: integer
          red:
            type: integer
          orange:
             type: integer
    ResultComment:
        required:
          - valorAnswer
        properties:
          valorAnswer: 
            type: string 
    ResultKpi:
        required:
          - month 
          - response
        type: object
        properties:
          month:
            type: string 
            example: January
          questionType:
            type: string
            enum: [traffic_light , comment]
          response:
            oneOf: 
                - $ref: '#/components/schemas/ResultTrafficlight'
                - $ref: '#/components/schemas/ResultComment'